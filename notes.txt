
// ////////////////////////////////////////////////////////////////////////////

-- sets up a gh-pages branch and deploys your project’s built files 

 -(from the dist folder) to GitHub Pages.


-- Instructions

-- Create and switch to the gh-pages branch  

git branch gh-pages
git checkout gh-pages

-- notes:

 - git branch gh-pages: Makes a new branch called gh-pages.  

 - git checkout gh-pages: Switches to that branch.

// //////


-- Merge updates from main  

git merge main --no-edit

-- notes:

 - Brings the latest code from main into gh-pages without extra steps.

// //////


-- Build the project  

npm run build

-- notes:

 - Creates the production-ready files in the dist folder (e.g., using Webpack).

// //////


-- Add and commit the dist folder  

git add dist -f
git commit -m "Deployment commit"

-- notes:

 - git add dist -f: Adds the dist folder to the commit, even if it’s ignored elsewhere.  

 - git commit -m "Deployment commit": Saves the changes with a message.

// //////


-- Push dist to gh-pages  

git subtree push --prefix dist origin gh-pages

-- notes: 

 - Sends the dist folder to the gh-pages branch on GitHub.

// //////


-- Go back to main  

git checkout main

-- notes:

 - Switches you back to the main branch.


// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////


-- webpack config for dev and production workflow:

 - adding shortcuts to package.json to simplify commands.

"scripts": {
  "build": "webpack --config webpack.prod.js",
  "dev": "webpack serve --config webpack.dev.js",
  "deploy": "git subtree push --prefix dist origin gh-pages"
}

-- scripts explained:

 - npm run build: Runs Webpack with production config (minified output).

 - npm run dev: Starts dev server with live reloading.

 - npm run deploy: Pushes dist/ to GitHub Pages.


 - Purpose: Saves typing long commands, standardizes tasks.

// ////////////////////////////////////////////////////////////////////////////


-- installs:

npm install --save-dev webpack-merge css-minimizer-webpack-plugin

-- explained:

 - webpack-merge: Merges multiple webpack configs into one.

 - css-minimizer-webpack-plugin: Minifies CSS.

// ////////////////////////////////////////////////////////////////////////////

 
-- split configs

 - split webpack.config.js

// //////


-- webpack.common.js

 - what it does:

   - shared entry, output, plugins, loaders, etc.

 - why:

   - reuses code, supports menu (two items/row) home image (full width)

// //////


-- webpack.dev.js

 - what it does:

   - dev config

   - dev server, live reloading, matches original webpack.config.js

 - why:
   
   - fast dev, better watchFiles

// //////


-- webpack.prod.js

 - what it does:

   - production config mode, minifies js and css, leap maps to dist/

 - why:

   - smaller, faster site.

// ////////////////////////////////////////////////////////////////////////////


-- setup:

 - delete wbepack.config.js

 - create webpack.common.js, webpack.dev.js, webpack.prod.js


-- production optimizers:

npm run build

 - minifies js and css

 - tree shakes unused code

 - optimizes images and fonts (dist/assets/)


 - what it does:

   - shrinks bundles, removes dead code, optimizes images, fonts, etc.

 - why:

   - faster page loads.


// ////////////////////////////////////////////////////////////////////////////


-- template repository: 

 - Go to https://github.com/chadelz-dev/restaurant-page-odin-proj > Settings.

 - Check “Template repository”.

   - What: Makes repo reusable.

   - Why: Quick setup for new projects.


-- 